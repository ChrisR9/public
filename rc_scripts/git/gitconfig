[user]
  name = Example User
  email = user@example.com

[alias]
  # create a shared repo to be used on a server somewhere
  bare    = init --bare --shared=true

  # shortcuts
  br      = branch -v
  co      = checkout
  last    = log -1
  re      = remote -v
  remv    = remote -v
  stat    = status
  tags    = tag

  # stash-y things
  app     = stash apply
  drop    = stash drop
  list    = stash list
  sap     = stash apply
  save    = stash save

  # submodule-y things
  subadd    = submodule add
  subinit   = submodule init

  # pushing things
  backup       = push --all backup
  pushall      = push --all
  pushallset   = push --set-upstream --all
  pushalldr    = push --all --dry-run
  pushalldrset = push --set-upstream --all --dry-run

  # showing repo information
  ds        = diff --stat
  dh        = diff HEAD
  graph     = log --oneline --decorate --graph
  hist      = log --graph --pretty='[%h]%d %cd %s'
  # branch-date is from
  # http://www.jamielennox.net/blog/2014/08/15/git-commands-for-messy-people/
  bd        = "!git for-each-ref \
    --sort=committerdate \
    --format='%1B[30;1m%(objectname:short)%1b[0;m %1B[32m%(committerdate:iso8601) %1B[34m%(committerdate:relative) %1B[0;m%(refname:short)' refs/heads/"
  branch-date = "!git for-each-ref \
    --sort=committerdate \
    --format='%1B[30;1m%(objectname:short)%1b[0;m %1B[32m%(committerdate:iso8601) %1B[34m%(committerdate:relative) %1B[0;m%(refname:short)' refs/heads/"
  # from http://coderwall.com/p/euwpig?i=3&p=1&t=git
  # shows log info with colors and lots of extra info
  graphdate = log --graph \
    --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' \
    --abbrev-commit
  gd        = log --graph \
    --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' \
    --abbrev-commit
  # shows what files git is tracking
  ls        = ls-tree --abbrev=8 -r HEAD
  # show commit logs, one commit per line
  one       = log --oneline
  # show what tags are in the repo;
  # 'lg' (above) will also show tags with commit hashes
  showtags  = show-ref --tags
  # shows annotation along with tag name
  tagn      = tag -n
  # remove a file from git that has been added, but not committed
  untrack   = rm --cached

[color]
	ui = true

#[color]
#  branch = auto
#  diff = auto
#  status = auto
#[color "branch"]
#  current = yellow reverse
#  local = yellow
#  remote = green
#[color "diff"]
#  meta = yellow bold
#  frag = magenta bold
#  old = red bold
#  new = green bold
#[color "status"]
#  added = yellow
#  changed = green
#  untracked = cyan

[push]
	default = simple
[core]
#	excludesfile = /Users/username/.gitignore_global
  autocrlf = input

[help]
  # http://git-scm.com/book/en/v2/Customizing-Git-Git-Configuration
  # Number of deciseconds to wait until running the suggested command
  autocorrect = 30

# vim: filetype=gitconfig tabstop=2 shiftwidth=2
