#!/bin/bash

# base URL for all of the git source stored on gnome.org
GNOME_GIT_BASE_URL="ssh://bmanning@git.gnome.org/git"
#GNOME_GIT_BASE_URL="http://git.gnome.org/browse"

GTK_PERL_REPOS='
perl-Cairo perl-Cairo-GObject perl-Champlain perl-Clutter
perl-ExtUtils-Depends perl-ExtUtils-PkgConfig
perl-GStreamer perl-GStreamer-GConf perl-GStreamer-Interfaces
perl-Glib perl-Glib-IO perl-Glib-Object-Introspection
perl-Gnome2 perl-Gnome2-Canvas perl-Gnome2-Dia perl-Gnome2-GConf
perl-Gnome2-PanelApplet perl-Gnome2-Print perl-Gnome2-Rsvg
perl-Gnome2-VFS perl-Gnome2-Vte perl-Gnome2-Wnck
perl-Goo-Canvas perl-Gtk2 perl-Gtk2-Champlain perl-Gtk2-GLExt
perl-Gtk2-GladeXML perl-Gtk2-Html2 perl-Gtk2-MozEmbed
perl-Gtk2-SourceView perl-Gtk2-SourceView2 perl-Gtk2-Spell
perl-Gtk2-Unique perl-Gtk3 perl-Pango
' # GTK_PERL_REPOS

function gtkcloneall {
    SOURCE_DIR="$HOME/gtk-perl"
    if [ ! -d $SOURCE_DIR ]; then
        mkdir -p $SOURCE_DIR
    fi
    OLDPWD=$PWD
    cd $SOURCE_DIR
    for PROJECT in $GTK_PERL_REPOS; do
        echo "=== git clone ${PROJECT} into ${SOURCE_DIR} ===";
        git clone ${GNOME_GIT_BASE_URL}/$PROJECT ${PROJECT}.git
        if [ $? -gt 0 ]; then
            echo "ERROR: 'git clone' returned non-zero status"
            return
        fi
        if [ -d ${PROJECT}.git ]; then
            cd ${PROJECT}.git
            echo "-- Setting user name/email/gpgkey via 'git config' --"
            git config user.name "Brian Manning"
            git config user.email "bmanning@src.gnome.org"
            git config user.signkey "8D7CEDE6"
            cd $SOURCE_DIR
        else
            echo "ERROR: project directory ${PROJECT}.git doesn't exist!"
            return
        fi
    done
    cd $OLDPWD
} # clone all of the gtk-perl sources

function gtkstat {
    SOURCE_DIR="$HOME/gtk-perl"
    echo "checking of status of projects in ${SOURCE_DIR}"
    gitstat
} # status of gtk-perl sources

function gtkpullall {
    SOURCE_DIR="$HOME/gtk-perl"
    echo "running 'git pull' on all projects in ${SOURCE_DIR}"
    gitpullall
} # pull all of the gtk-perl sources

function gtkinchk {
    SOURCE_DIR="$HOME/gtk-perl"
    echo "checking for incoming code on all projects in ${SOURCE_DIR}"
    gitinchk
} # check for incoming gtk-perl source

function gtkoutchk {
    SOURCE_DIR="$HOME/gtk-perl"
    echo "checking for outgoing code on all projects in ${SOURCE_DIR}"
    gitoutchk
} # check for gtk-perl source that needs to be pushed to the server

# vi: set filetype=sh shiftwidth=4 tabstop=4
# fin!
